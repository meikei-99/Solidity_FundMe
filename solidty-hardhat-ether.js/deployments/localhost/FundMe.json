{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbb41f812a77693d26433523f564274981fc98c4e7332504b664975bf9c1ea37f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "867239",
    "logsBloom": "0x
    "blockHash": "0x3ae3c191d25ddeecbff6ded24562bc25fda7e2b9ff585ffa6992963e6a3aea3a",
    "transactionHash": "0xbb41f812a77693d26433523f564274981fc98c4e7332504b664975bf9c1ea37f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "867239",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "32525a48d914224783803e07af55fb0e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Mei Kei\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\n/**@title A sample Funding Contract\\r\\n * @author Mei Kei\\r\\n * @notice This contract is for creating a sample funding contract\\r\\n * @dev This implements price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    //Type declaration\\r\\n    using PriceConverter for uint256;\\r\\n    //State variables\\r\\n    address[] private s_funders;\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    address private immutable i_owner;\\r\\n    uint256 public constant minimumUsd = 50 * 10**18;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        // require(msg.sender==owner,\\\"Sender is not owner!\\\");\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        //msg.value.getConversionRate(); >> library\\r\\n        require(\\r\\n            msg.value.getConversion(s_priceFeed) >= minimumUsd,\\r\\n            \\\"Not enough\\\"\\r\\n        );\\r\\n        s_funders.push(msg.sender);\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public payable onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n        //mapping cannot put inside memory\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool callSuccess, ) = (i_owner).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"call failed\\\");\\r\\n    }\\r\\n\\r\\n    function getFunders(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(address funder)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_addressToAmountFunded[funder];\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8b29a7c9ea64a3441fbca63c9700a4d65f8613af215316eedb268c129bf6c876\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        // );\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10); //3000.00000000\\r\\n    }\\r\\n\\r\\n    function getConversion(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethinUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethinUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcf0a049038255d7b469ed27bf47ee51788c72b29cd3cc3cd0aab995692cfb02d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e8146101325780639e87a5cd1461015d578063b60d428814610188578063be2693f01461019257610083565b80630343fb251461008d578063098de820146100ca5780633a7b6c74146100f557610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100b460048036038101906100af9190610861565b6102d7565b6040516100c191906108a7565b60405180910390f35b3480156100d657600080fd5b506100df610320565b6040516100ec91906108a7565b60405180910390f35b34801561010157600080fd5b5061011c600480360381019061011791906108ee565b61032d565b604051610129919061092a565b60405180910390f35b34801561013e57600080fd5b50610147610374565b604051610154919061092a565b60405180910390f35b34801561016957600080fd5b5061017261039c565b60405161017f91906109a4565b60405180910390f35b61019061019c565b005b61019a6103c6565b005b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461068a90919063ffffffff16565b101561021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390610a1c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ce9190610a6b565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b600080828154811061034257610341610a9f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156104ce57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610484575b5050505050905060005b81518110156105595760008282815181106104f6576104f5610a9f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061055190610ace565b9150506104d8565b50600067ffffffffffffffff81111561057557610574610b16565b5b6040519080825280602002602001820160405280156105a35781602001602082028036833780820191505090505b50600090805190602001906105b9929190610757565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161060090610b76565b60006040518083038185875af1925050503d806000811461063d576040519150601f19603f3d011682016040523d82523d6000602084013e610642565b606091505b5050905080610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610bd7565b60405180910390fd5b5050565b600080610696836106c6565b90506000670de0b6b3a764000085836106af9190610bf7565b6106b99190610c68565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190610d26565b5050509150506402540be4008161074f9190610da1565b915050919050565b8280548282559060005260206000209081019282156107d0579160200282015b828111156107cf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610777565b5b5090506107dd91906107e1565b5090565b5b808211156107fa5760008160009055506001016107e2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061082e82610803565b9050919050565b61083e81610823565b811461084957600080fd5b50565b60008135905061085b81610835565b92915050565b600060208284031215610877576108766107fe565b5b60006108858482850161084c565b91505092915050565b6000819050919050565b6108a18161088e565b82525050565b60006020820190506108bc6000830184610898565b92915050565b6108cb8161088e565b81146108d657600080fd5b50565b6000813590506108e8816108c2565b92915050565b600060208284031215610904576109036107fe565b5b6000610912848285016108d9565b91505092915050565b61092481610823565b82525050565b600060208201905061093f600083018461091b565b92915050565b6000819050919050565b600061096a61096561096084610803565b610945565b610803565b9050919050565b600061097c8261094f565b9050919050565b600061098e82610971565b9050919050565b61099e81610983565b82525050565b60006020820190506109b96000830184610995565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b6000610a06600a836109bf565b9150610a11826109d0565b602082019050919050565b60006020820190508181036000830152610a35816109f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a768261088e565b9150610a818361088e565b9250828201905080821115610a9957610a98610a3c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ad98261088e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b0b57610b0a610a3c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b60600083610b45565b9150610b6b82610b50565b600082019050919050565b6000610b8182610b53565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bc1600b836109bf565b9150610bcc82610b8b565b602082019050919050565b60006020820190508181036000830152610bf081610bb4565b9050919050565b6000610c028261088e565b9150610c0d8361088e565b9250828202610c1b8161088e565b91508282048414831517610c3257610c31610a3c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c738261088e565b9150610c7e8361088e565b925082610c8e57610c8d610c39565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cb881610c99565b8114610cc357600080fd5b50565b600081519050610cd581610caf565b92915050565b6000819050919050565b610cee81610cdb565b8114610cf957600080fd5b50565b600081519050610d0b81610ce5565b92915050565b600081519050610d20816108c2565b92915050565b600080600080600060a08688031215610d4257610d416107fe565b5b6000610d5088828901610cc6565b9550506020610d6188828901610cfc565b9450506040610d7288828901610d11565b9350506060610d8388828901610d11565b9250506080610d9488828901610cc6565b9150509295509295909350565b6000610dac82610cdb565b9150610db783610cdb565b9250828202610dc581610cdb565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dfd57610dfc610a3c565b5b8282058414831517610e1257610e11610a3c565b5b509291505056fea26469706673582212204511e1e5cea9ffada7d5dd345308a69c45116bdeb6edc5932ee4aa53730411cf64736f6c63430008110033",
  "devdoc": {
    "author": "Mei Kei",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}